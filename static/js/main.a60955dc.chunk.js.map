{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","sort","good1","good2","ALPHABET","localeCompare","LENGTH","length","NONE","reverse","console","log","App","useState","setReversed","setSortType","className","type","classNames","onClick","current","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAeK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAGNC,EAAY,YAAOH,GAyBzB,OAvBAG,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQL,GACN,KAAKJ,EAASU,SACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKT,EAASY,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAE9B,KAAKb,EAASc,KACZ,OAAO,EAET,QACE,OAAO,MAITT,GACFC,EAAaS,UAIfC,QAAQC,IAAIb,EAAUC,GAEfC,G,SA1CJN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA6CE,IAAMkB,EAAgB,WAC3B,MAAkCC,oBAAS,GAA3C,mBAAOd,EAAP,KAAmBe,EAAnB,KACA,EAAgCD,mBAASnB,EAASc,MAAlD,mBAAOV,EAAP,KAAiBiB,EAAjB,KAEA,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYpB,IAAaJ,EAASU,WAEtCe,QAAS,kBAAMJ,EAAYrB,EAASU,WAPtC,iCAYA,wBACEa,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYpB,IAAaJ,EAASY,SAEtCa,QAAS,kBAAMJ,EAAYrB,EAASY,SAPtC,4BAYA,wBACEW,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAAanB,IAEjBoB,QAAS,kBAAML,GAAY,SAAAM,GAAO,OAAKA,MAPzC,sBAYEtB,IAAaJ,EAASc,MAAQT,IAE5B,wBACEkB,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPL,GAAY,GACZC,EAAYrB,EAASc,OALzB,sBAaN,6BACGZ,EAAkBD,EAAiB,CAAEG,WAAUC,eAC7CsB,KAAI,SAACC,GAAD,OACH,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YCzHpCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a60955dc.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return good1.localeCompare(good2);\n\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n\n      case SortType.NONE:\n        return 1;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-info',\n            { 'is-light': sortType !== SortType.ALPHABET },\n          )}\n          onClick={() => setSortType(SortType.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-success',\n            { 'is-light': sortType !== SortType.LENGTH },\n          )}\n          onClick={() => setSortType(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={() => setReversed(current => !current)}\n        >\n          Reverse\n        </button>\n\n        {(sortType !== SortType.NONE || isReversed)\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => {\n                setReversed(false);\n                setSortType(SortType.NONE);\n              }}\n            >\n              Reset\n            </button>\n          )}\n      </div>\n\n      <ul>\n        {getReorderedGoods(goodsFromServer, { sortType, isReversed })\n          .map((good) => (\n            <li data-cy=\"Good\" key={good}>\n              {good}\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}